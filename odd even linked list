/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if (!head || !head->next) return head; 
        ListNode*temp1=head;
        ListNode*temp2=head->next;
        ListNode*dummynode1=new ListNode(-1);
        ListNode*dummynode2=new ListNode(-2);
        dummynode1->next=head;
        dummynode2->next=head->next;
        while(temp2 && temp2->next){
            temp1->next=temp1->next->next;
            temp2->next=temp2->next->next;
            temp1=temp1->next;
            temp2=temp2->next;
        }
        temp1->next=dummynode2->next;
        return dummynode1->next;
    }
};
